//
// Generated by LLVM NVPTX Back-End
//

.version 6.0
.target sm_70
.address_size 64

	// .globl	_Z24sxt_mul_wide_limbs_loopsPmPKmS1_ // -- Begin function _Z24sxt_mul_wide_limbs_loopsPmPKmS1_
                                        // @_Z24sxt_mul_wide_limbs_loopsPmPKmS1_
.visible .entry _Z24sxt_mul_wide_limbs_loopsPmPKmS1_(
	.param .u64 _Z24sxt_mul_wide_limbs_loopsPmPKmS1__param_0,
	.param .u64 _Z24sxt_mul_wide_limbs_loopsPmPKmS1__param_1,
	.param .u64 _Z24sxt_mul_wide_limbs_loopsPmPKmS1__param_2
)
{
	.reg .b64 	%rd<159>;

// %bb.0:
	ld.param.u64 	%rd153, [_Z24sxt_mul_wide_limbs_loopsPmPKmS1__param_0];
	ld.param.u64 	%rd154, [_Z24sxt_mul_wide_limbs_loopsPmPKmS1__param_2];
	cvta.to.global.u64 	%rd155, %rd154;
	ld.param.u64 	%rd156, [_Z24sxt_mul_wide_limbs_loopsPmPKmS1__param_1];
	cvta.to.global.u64 	%rd157, %rd156;
	cvta.to.global.u64 	%rd158, %rd153;
	mov.u64 	%rd2, 0;
	// begin inline asm
	addc.cc.u64 %rd1, %rd2, %rd2;
	// end inline asm
	ld.global.nc.u64 	%rd5, [%rd157];
	ld.global.nc.u64 	%rd6, [%rd155];
	ld.global.u64 	%rd7, [%rd158];
	// begin inline asm
	madc.lo.cc.u64 %rd4, %rd5, %rd6, %rd7;
	// end inline asm
	st.global.u64 	[%rd158], %rd4;
	ld.global.nc.u64 	%rd10, [%rd155+8];
	ld.global.u64 	%rd11, [%rd158+8];
	// begin inline asm
	madc.lo.cc.u64 %rd8, %rd5, %rd10, %rd11;
	// end inline asm
	st.global.u64 	[%rd158+8], %rd8;
	ld.global.nc.u64 	%rd14, [%rd155+16];
	ld.global.u64 	%rd15, [%rd158+16];
	// begin inline asm
	madc.lo.cc.u64 %rd12, %rd5, %rd14, %rd15;
	// end inline asm
	st.global.u64 	[%rd158+16], %rd12;
	ld.global.nc.u64 	%rd18, [%rd155+24];
	ld.global.u64 	%rd19, [%rd158+24];
	// begin inline asm
	madc.lo.cc.u64 %rd16, %rd5, %rd18, %rd19;
	// end inline asm
	st.global.u64 	[%rd158+24], %rd16;
	// begin inline asm
	addc.cc.u64 %rd20, %rd2, %rd2;
	// end inline asm
	st.global.u64 	[%rd158+32], %rd2;
	ld.global.u64 	%rd26, [%rd158+8];
	// begin inline asm
	madc.hi.cc.u64 %rd23, %rd5, %rd6, %rd26;
	// end inline asm
	st.global.u64 	[%rd158+8], %rd23;
	ld.global.u64 	%rd30, [%rd158+16];
	// begin inline asm
	madc.hi.cc.u64 %rd27, %rd5, %rd10, %rd30;
	// end inline asm
	st.global.u64 	[%rd158+16], %rd27;
	ld.global.u64 	%rd34, [%rd158+24];
	// begin inline asm
	madc.hi.cc.u64 %rd31, %rd5, %rd14, %rd34;
	// end inline asm
	st.global.u64 	[%rd158+24], %rd31;
	ld.global.u64 	%rd38, [%rd158+32];
	// begin inline asm
	madc.hi.cc.u64 %rd35, %rd5, %rd18, %rd38;
	// end inline asm
	st.global.u64 	[%rd158+32], %rd35;
	// begin inline asm
	addc.cc.u64 %rd39, %rd2, %rd2;
	// end inline asm
	ld.global.nc.u64 	%rd43, [%rd157+8];
	ld.global.u64 	%rd45, [%rd158+8];
	// begin inline asm
	madc.lo.cc.u64 %rd42, %rd43, %rd6, %rd45;
	// end inline asm
	st.global.u64 	[%rd158+8], %rd42;
	ld.global.u64 	%rd49, [%rd158+16];
	// begin inline asm
	madc.lo.cc.u64 %rd46, %rd43, %rd10, %rd49;
	// end inline asm
	st.global.u64 	[%rd158+16], %rd46;
	ld.global.u64 	%rd53, [%rd158+24];
	// begin inline asm
	madc.lo.cc.u64 %rd50, %rd43, %rd14, %rd53;
	// end inline asm
	st.global.u64 	[%rd158+24], %rd50;
	ld.global.u64 	%rd57, [%rd158+32];
	// begin inline asm
	madc.lo.cc.u64 %rd54, %rd43, %rd18, %rd57;
	// end inline asm
	st.global.u64 	[%rd158+32], %rd54;
	// begin inline asm
	addc.cc.u64 %rd58, %rd2, %rd2;
	// end inline asm
	st.global.u64 	[%rd158+40], %rd58;
	ld.global.u64 	%rd64, [%rd158+16];
	// begin inline asm
	madc.hi.cc.u64 %rd61, %rd43, %rd6, %rd64;
	// end inline asm
	st.global.u64 	[%rd158+16], %rd61;
	ld.global.u64 	%rd68, [%rd158+24];
	// begin inline asm
	madc.hi.cc.u64 %rd65, %rd43, %rd10, %rd68;
	// end inline asm
	st.global.u64 	[%rd158+24], %rd65;
	ld.global.u64 	%rd72, [%rd158+32];
	// begin inline asm
	madc.hi.cc.u64 %rd69, %rd43, %rd14, %rd72;
	// end inline asm
	st.global.u64 	[%rd158+32], %rd69;
	ld.global.u64 	%rd76, [%rd158+40];
	// begin inline asm
	madc.hi.cc.u64 %rd73, %rd43, %rd18, %rd76;
	// end inline asm
	st.global.u64 	[%rd158+40], %rd73;
	// begin inline asm
	addc.cc.u64 %rd77, %rd2, %rd2;
	// end inline asm
	ld.global.nc.u64 	%rd81, [%rd157+16];
	ld.global.u64 	%rd83, [%rd158+16];
	// begin inline asm
	madc.lo.cc.u64 %rd80, %rd81, %rd6, %rd83;
	// end inline asm
	st.global.u64 	[%rd158+16], %rd80;
	ld.global.u64 	%rd87, [%rd158+24];
	// begin inline asm
	madc.lo.cc.u64 %rd84, %rd81, %rd10, %rd87;
	// end inline asm
	st.global.u64 	[%rd158+24], %rd84;
	ld.global.u64 	%rd91, [%rd158+32];
	// begin inline asm
	madc.lo.cc.u64 %rd88, %rd81, %rd14, %rd91;
	// end inline asm
	st.global.u64 	[%rd158+32], %rd88;
	ld.global.u64 	%rd95, [%rd158+40];
	// begin inline asm
	madc.lo.cc.u64 %rd92, %rd81, %rd18, %rd95;
	// end inline asm
	st.global.u64 	[%rd158+40], %rd92;
	// begin inline asm
	addc.cc.u64 %rd96, %rd2, %rd2;
	// end inline asm
	st.global.u64 	[%rd158+48], %rd96;
	ld.global.u64 	%rd102, [%rd158+24];
	// begin inline asm
	madc.hi.cc.u64 %rd99, %rd81, %rd6, %rd102;
	// end inline asm
	st.global.u64 	[%rd158+24], %rd99;
	ld.global.u64 	%rd106, [%rd158+32];
	// begin inline asm
	madc.hi.cc.u64 %rd103, %rd81, %rd10, %rd106;
	// end inline asm
	st.global.u64 	[%rd158+32], %rd103;
	ld.global.u64 	%rd110, [%rd158+40];
	// begin inline asm
	madc.hi.cc.u64 %rd107, %rd81, %rd14, %rd110;
	// end inline asm
	st.global.u64 	[%rd158+40], %rd107;
	ld.global.u64 	%rd114, [%rd158+48];
	// begin inline asm
	madc.hi.cc.u64 %rd111, %rd81, %rd18, %rd114;
	// end inline asm
	st.global.u64 	[%rd158+48], %rd111;
	// begin inline asm
	addc.cc.u64 %rd115, %rd2, %rd2;
	// end inline asm
	ld.global.nc.u64 	%rd119, [%rd157+24];
	ld.global.nc.u64 	%rd120, [%rd155];
	ld.global.u64 	%rd121, [%rd158+24];
	// begin inline asm
	madc.lo.cc.u64 %rd118, %rd119, %rd120, %rd121;
	// end inline asm
	st.global.u64 	[%rd158+24], %rd118;
	ld.global.nc.u64 	%rd124, [%rd155+8];
	ld.global.u64 	%rd125, [%rd158+32];
	// begin inline asm
	madc.lo.cc.u64 %rd122, %rd119, %rd124, %rd125;
	// end inline asm
	st.global.u64 	[%rd158+32], %rd122;
	ld.global.nc.u64 	%rd128, [%rd155+16];
	ld.global.u64 	%rd129, [%rd158+40];
	// begin inline asm
	madc.lo.cc.u64 %rd126, %rd119, %rd128, %rd129;
	// end inline asm
	st.global.u64 	[%rd158+40], %rd126;
	ld.global.nc.u64 	%rd132, [%rd155+24];
	ld.global.u64 	%rd133, [%rd158+48];
	// begin inline asm
	madc.lo.cc.u64 %rd130, %rd119, %rd132, %rd133;
	// end inline asm
	st.global.u64 	[%rd158+48], %rd130;
	// begin inline asm
	addc.cc.u64 %rd134, %rd2, %rd2;
	// end inline asm
	st.global.u64 	[%rd158+56], %rd134;
	ld.global.u64 	%rd140, [%rd158+32];
	// begin inline asm
	madc.hi.cc.u64 %rd137, %rd119, %rd120, %rd140;
	// end inline asm
	st.global.u64 	[%rd158+32], %rd137;
	ld.global.u64 	%rd144, [%rd158+40];
	// begin inline asm
	madc.hi.cc.u64 %rd141, %rd119, %rd124, %rd144;
	// end inline asm
	st.global.u64 	[%rd158+40], %rd141;
	ld.global.u64 	%rd148, [%rd158+48];
	// begin inline asm
	madc.hi.cc.u64 %rd145, %rd119, %rd128, %rd148;
	// end inline asm
	st.global.u64 	[%rd158+48], %rd145;
	ld.global.u64 	%rd152, [%rd158+56];
	// begin inline asm
	madc.hi.cc.u64 %rd149, %rd119, %rd132, %rd152;
	// end inline asm
	st.global.u64 	[%rd158+56], %rd149;
	ret;
                                        // -- End function
}
	// .globl	_Z27sxt_mul_wide_limbs_unrolledPmPKmS1_ // -- Begin function _Z27sxt_mul_wide_limbs_unrolledPmPKmS1_
.visible .entry _Z27sxt_mul_wide_limbs_unrolledPmPKmS1_(
	.param .u64 _Z27sxt_mul_wide_limbs_unrolledPmPKmS1__param_0,
	.param .u64 _Z27sxt_mul_wide_limbs_unrolledPmPKmS1__param_1,
	.param .u64 _Z27sxt_mul_wide_limbs_unrolledPmPKmS1__param_2
)                                       // @_Z27sxt_mul_wide_limbs_unrolledPmPKmS1_
{
	.reg .b64 	%rd<159>;

// %bb.0:
	ld.param.u64 	%rd153, [_Z27sxt_mul_wide_limbs_unrolledPmPKmS1__param_0];
	ld.param.u64 	%rd154, [_Z27sxt_mul_wide_limbs_unrolledPmPKmS1__param_2];
	cvta.to.global.u64 	%rd155, %rd154;
	ld.param.u64 	%rd156, [_Z27sxt_mul_wide_limbs_unrolledPmPKmS1__param_1];
	cvta.to.global.u64 	%rd157, %rd156;
	cvta.to.global.u64 	%rd158, %rd153;
	mov.u64 	%rd2, 0;
	// begin inline asm
	addc.u64 %rd1, %rd2, %rd2;
	// end inline asm
	ld.global.nc.u64 	%rd5, [%rd157];
	ld.global.nc.u64 	%rd6, [%rd155];
	ld.global.u64 	%rd7, [%rd158];
	// begin inline asm
	mad.lo.cc.u64 %rd4, %rd5, %rd6, %rd7;
	// end inline asm
	st.global.u64 	[%rd158], %rd4;
	ld.global.nc.u64 	%rd10, [%rd155+8];
	ld.global.u64 	%rd11, [%rd158+8];
	// begin inline asm
	madc.lo.cc.u64 %rd26, %rd5, %rd10, %rd11;
	// end inline asm
	ld.global.nc.u64 	%rd14, [%rd155+16];
	ld.global.u64 	%rd15, [%rd158+16];
	// begin inline asm
	madc.lo.cc.u64 %rd30, %rd5, %rd14, %rd15;
	// end inline asm
	ld.global.nc.u64 	%rd18, [%rd155+24];
	ld.global.u64 	%rd19, [%rd158+24];
	// begin inline asm
	madc.lo.cc.u64 %rd34, %rd5, %rd18, %rd19;
	// end inline asm
	// begin inline asm
	addc.u64 %rd20, %rd2, %rd2;
	// end inline asm
	// begin inline asm
	mad.hi.cc.u64 %rd45, %rd5, %rd6, %rd26;
	// end inline asm
	// begin inline asm
	madc.hi.cc.u64 %rd49, %rd5, %rd10, %rd30;
	// end inline asm
	// begin inline asm
	madc.hi.cc.u64 %rd53, %rd5, %rd14, %rd34;
	// end inline asm
	ld.global.u64 	%rd38, [%rd158+32];
	// begin inline asm
	madc.hi.cc.u64 %rd57, %rd5, %rd18, %rd38;
	// end inline asm
	// begin inline asm
	addc.u64 %rd39, %rd2, %rd2;
	// end inline asm
	ld.global.nc.u64 	%rd43, [%rd157+8];
	// begin inline asm
	mad.lo.cc.u64 %rd42, %rd43, %rd6, %rd45;
	// end inline asm
	st.global.u64 	[%rd158+8], %rd42;
	// begin inline asm
	madc.lo.cc.u64 %rd64, %rd43, %rd10, %rd49;
	// end inline asm
	// begin inline asm
	madc.lo.cc.u64 %rd68, %rd43, %rd14, %rd53;
	// end inline asm
	// begin inline asm
	madc.lo.cc.u64 %rd72, %rd43, %rd18, %rd57;
	// end inline asm
	// begin inline asm
	addc.u64 %rd76, %rd2, %rd2;
	// end inline asm
	// begin inline asm
	mad.hi.cc.u64 %rd83, %rd43, %rd6, %rd64;
	// end inline asm
	// begin inline asm
	madc.hi.cc.u64 %rd87, %rd43, %rd10, %rd68;
	// end inline asm
	// begin inline asm
	madc.hi.cc.u64 %rd91, %rd43, %rd14, %rd72;
	// end inline asm
	// begin inline asm
	madc.hi.cc.u64 %rd95, %rd43, %rd18, %rd76;
	// end inline asm
	// begin inline asm
	addc.u64 %rd77, %rd2, %rd2;
	// end inline asm
	ld.global.nc.u64 	%rd81, [%rd157+16];
	// begin inline asm
	mad.lo.cc.u64 %rd80, %rd81, %rd6, %rd83;
	// end inline asm
	st.global.u64 	[%rd158+16], %rd80;
	// begin inline asm
	madc.lo.cc.u64 %rd102, %rd81, %rd10, %rd87;
	// end inline asm
	// begin inline asm
	madc.lo.cc.u64 %rd106, %rd81, %rd14, %rd91;
	// end inline asm
	// begin inline asm
	madc.lo.cc.u64 %rd110, %rd81, %rd18, %rd95;
	// end inline asm
	// begin inline asm
	addc.u64 %rd114, %rd2, %rd2;
	// end inline asm
	// begin inline asm
	mad.hi.cc.u64 %rd121, %rd81, %rd6, %rd102;
	// end inline asm
	// begin inline asm
	madc.hi.cc.u64 %rd125, %rd81, %rd10, %rd106;
	// end inline asm
	// begin inline asm
	madc.hi.cc.u64 %rd129, %rd81, %rd14, %rd110;
	// end inline asm
	// begin inline asm
	madc.hi.cc.u64 %rd133, %rd81, %rd18, %rd114;
	// end inline asm
	// begin inline asm
	addc.u64 %rd115, %rd2, %rd2;
	// end inline asm
	ld.global.nc.u64 	%rd119, [%rd157+24];
	// begin inline asm
	mad.lo.cc.u64 %rd118, %rd119, %rd6, %rd121;
	// end inline asm
	st.global.u64 	[%rd158+24], %rd118;
	// begin inline asm
	madc.lo.cc.u64 %rd140, %rd119, %rd10, %rd125;
	// end inline asm
	// begin inline asm
	madc.lo.cc.u64 %rd144, %rd119, %rd14, %rd129;
	// end inline asm
	// begin inline asm
	madc.lo.cc.u64 %rd148, %rd119, %rd18, %rd133;
	// end inline asm
	// begin inline asm
	addc.u64 %rd152, %rd2, %rd2;
	// end inline asm
	// begin inline asm
	mad.hi.cc.u64 %rd137, %rd119, %rd6, %rd140;
	// end inline asm
	st.global.u64 	[%rd158+32], %rd137;
	// begin inline asm
	madc.hi.cc.u64 %rd141, %rd119, %rd10, %rd144;
	// end inline asm
	st.global.u64 	[%rd158+40], %rd141;
	// begin inline asm
	madc.hi.cc.u64 %rd145, %rd119, %rd14, %rd148;
	// end inline asm
	st.global.u64 	[%rd158+48], %rd145;
	// begin inline asm
	madc.hi.cc.u64 %rd149, %rd119, %rd18, %rd152;
	// end inline asm
	st.global.u64 	[%rd158+56], %rd149;
	ret;
                                        // -- End function
}
	// .globl	_Z29sxt_mul_wide_4_limbs_unrolledPmPKmS1_ // -- Begin function _Z29sxt_mul_wide_4_limbs_unrolledPmPKmS1_
.visible .entry _Z29sxt_mul_wide_4_limbs_unrolledPmPKmS1_(
	.param .u64 _Z29sxt_mul_wide_4_limbs_unrolledPmPKmS1__param_0,
	.param .u64 _Z29sxt_mul_wide_4_limbs_unrolledPmPKmS1__param_1,
	.param .u64 _Z29sxt_mul_wide_4_limbs_unrolledPmPKmS1__param_2
)                                       // @_Z29sxt_mul_wide_4_limbs_unrolledPmPKmS1_
{
	.reg .b64 	%rd<95>;

// %bb.0:
	ld.param.u64 	%rd1, [_Z29sxt_mul_wide_4_limbs_unrolledPmPKmS1__param_0];
	ld.param.u64 	%rd2, [_Z29sxt_mul_wide_4_limbs_unrolledPmPKmS1__param_2];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [_Z29sxt_mul_wide_4_limbs_unrolledPmPKmS1__param_1];
	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	ld.global.nc.u64 	%rd7, [%rd5];
	ld.global.nc.u64 	%rd8, [%rd3];
	mul.lo.s64 	%rd9, %rd8, %rd7;
	st.global.u64 	[%rd6], %rd9;
	mul.hi.u64 	%rd10, %rd8, %rd7;
	ld.global.nc.u64 	%rd11, [%rd3+8];
	mul.lo.s64 	%rd12, %rd11, %rd7;
	mul.hi.u64 	%rd13, %rd11, %rd7;
	add.cc.s64 	%rd14, %rd12, %rd10;
	addc.cc.s64 	%rd15, %rd13, 0;
	ld.global.nc.u64 	%rd16, [%rd3+16];
	mul.lo.s64 	%rd17, %rd16, %rd7;
	mul.hi.u64 	%rd18, %rd16, %rd7;
	add.cc.s64 	%rd19, %rd17, %rd15;
	addc.cc.s64 	%rd20, %rd18, 0;
	ld.global.nc.u64 	%rd21, [%rd3+24];
	mul.lo.s64 	%rd22, %rd21, %rd7;
	mul.hi.u64 	%rd23, %rd21, %rd7;
	add.cc.s64 	%rd24, %rd22, %rd20;
	addc.cc.s64 	%rd25, %rd23, 0;
	ld.global.nc.u64 	%rd26, [%rd5+8];
	mul.lo.s64 	%rd27, %rd26, %rd8;
	mul.hi.u64 	%rd28, %rd26, %rd8;
	add.cc.s64 	%rd29, %rd27, %rd14;
	addc.cc.s64 	%rd30, %rd28, 0;
	st.global.u64 	[%rd6+8], %rd29;
	mul.lo.s64 	%rd31, %rd26, %rd11;
	mul.hi.u64 	%rd32, %rd26, %rd11;
	add.cc.s64 	%rd33, %rd31, %rd19;
	addc.cc.s64 	%rd34, %rd32, 0;
	add.cc.s64 	%rd35, %rd33, %rd30;
	addc.cc.s64 	%rd36, %rd34, 0;
	mul.lo.s64 	%rd37, %rd26, %rd16;
	mul.hi.u64 	%rd38, %rd26, %rd16;
	add.cc.s64 	%rd39, %rd37, %rd24;
	addc.cc.s64 	%rd40, %rd38, 0;
	add.cc.s64 	%rd41, %rd39, %rd36;
	addc.cc.s64 	%rd42, %rd40, 0;
	mul.lo.s64 	%rd43, %rd26, %rd21;
	mul.hi.u64 	%rd44, %rd26, %rd21;
	add.cc.s64 	%rd45, %rd43, %rd25;
	addc.cc.s64 	%rd46, %rd44, 0;
	add.cc.s64 	%rd47, %rd45, %rd42;
	addc.cc.s64 	%rd48, %rd46, 0;
	ld.global.nc.u64 	%rd49, [%rd5+16];
	mul.lo.s64 	%rd50, %rd49, %rd8;
	mul.hi.u64 	%rd51, %rd49, %rd8;
	add.cc.s64 	%rd52, %rd50, %rd35;
	addc.cc.s64 	%rd53, %rd51, 0;
	st.global.u64 	[%rd6+16], %rd52;
	mul.lo.s64 	%rd54, %rd49, %rd11;
	mul.hi.u64 	%rd55, %rd49, %rd11;
	add.cc.s64 	%rd56, %rd54, %rd41;
	addc.cc.s64 	%rd57, %rd55, 0;
	add.cc.s64 	%rd58, %rd56, %rd53;
	addc.cc.s64 	%rd59, %rd57, 0;
	mul.lo.s64 	%rd60, %rd49, %rd16;
	mul.hi.u64 	%rd61, %rd49, %rd16;
	add.cc.s64 	%rd62, %rd47, %rd60;
	addc.cc.s64 	%rd63, %rd61, 0;
	add.cc.s64 	%rd64, %rd62, %rd59;
	addc.cc.s64 	%rd65, %rd63, 0;
	mul.lo.s64 	%rd66, %rd49, %rd21;
	mul.hi.u64 	%rd67, %rd49, %rd21;
	add.cc.s64 	%rd68, %rd48, %rd66;
	addc.cc.s64 	%rd69, %rd67, 0;
	add.cc.s64 	%rd70, %rd68, %rd65;
	addc.cc.s64 	%rd71, %rd69, 0;
	ld.global.nc.u64 	%rd72, [%rd5+24];
	mul.lo.s64 	%rd73, %rd72, %rd8;
	mul.hi.u64 	%rd74, %rd72, %rd8;
	add.cc.s64 	%rd75, %rd73, %rd58;
	addc.cc.s64 	%rd76, %rd74, 0;
	st.global.u64 	[%rd6+24], %rd75;
	mul.lo.s64 	%rd77, %rd72, %rd11;
	mul.hi.u64 	%rd78, %rd72, %rd11;
	add.cc.s64 	%rd79, %rd77, %rd64;
	addc.cc.s64 	%rd80, %rd78, 0;
	add.cc.s64 	%rd81, %rd79, %rd76;
	addc.cc.s64 	%rd82, %rd80, 0;
	st.global.u64 	[%rd6+32], %rd81;
	mul.lo.s64 	%rd83, %rd72, %rd16;
	mul.hi.u64 	%rd84, %rd72, %rd16;
	add.cc.s64 	%rd85, %rd70, %rd83;
	addc.cc.s64 	%rd86, %rd84, 0;
	add.cc.s64 	%rd87, %rd85, %rd82;
	addc.cc.s64 	%rd88, %rd86, 0;
	st.global.u64 	[%rd6+40], %rd87;
	mul.lo.s64 	%rd89, %rd72, %rd21;
	mul.hi.u64 	%rd90, %rd72, %rd21;
	add.cc.s64 	%rd91, %rd71, %rd89;
	addc.cc.s64 	%rd92, %rd90, 0;
	add.cc.s64 	%rd93, %rd91, %rd88;
	addc.cc.s64 	%rd94, %rd92, 0;
	st.global.u64 	[%rd6+48], %rd93;
	st.global.u64 	[%rd6+56], %rd94;
	ret;
                                        // -- End function
}
